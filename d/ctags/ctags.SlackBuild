#! /bin/sh
#
# by: H4kTeUr - http://www.slackbuilds.net < h4kteur at slackbuilds dot net >
# Copyright 2007, 2008 H4kTeUr. All rights reserved.
#
# Redistribution and use of this software, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this software must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Latest ctags sourcecode is available at http://ctags.sourceforge.net

set -e
CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=${PKG:-$TMP/package-ctags}
OUT=${OUT:-$TMP/build}

# version on the tarball
VERSION=${VERSION:-5.8}
# version used in the source directory to cd into
DIRVER=${DIRVER:-5.8}
# version used for the Slackware package
PKGVER=${PKGVER:-5.8}

# target
ARCH=${ARCH:-$(uname -m)}
TARGET=${TARGET:-$(uname -m)}
BUILD=${BUILD:-1_SBn}

# set tarball download link
SOURCE=${SOURCE:-http://switch.dl.sourceforge.net/sourceforge/ctags/ctags-$VERSION.tar.gz}
ARCHIVE=$(basename $SOURCE)

# sanity checks
if [ "$(id -u)" = "0" ]; then
    echo "Do not run this SlackBuild as ROOT !"
    exit 1
fi

if [ ! -d $TMP ]; then
    mkdir -p $TMP
fi

# download the tarball if it's not found
if [ ! -r $ARCHIVE ]; then
    echo "Downloading $ARCHIVE..."
    rm -f $ARCHIVE.part
    wget -vc $SOURCE -O $ARCHIVE.part
    mv $ARCHIVE.part $ARCHIVE
fi

if [ "$ARCH" = "i386" ]; then
    SLKCFLAGS="-O2 -march=i386 -mcpu=i686"
elif [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2"
fi

# cleanup
rm -rf $PKG
mkdir -p $PKG

# extraction
cd $TMP
rm -rf ctags-$DIRVER
tar -xvf $CWD/ctags-$VERSION.tar.gz
cd ctags-$DIRVER

# make sure ownerships and permissions are sane
chmod -R a-s,u+rw,go-w+r .

# configure
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure \
    --prefix=/usr \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --build=$TARGET-slackware-linux

# build
make -j3

# add the install directories
mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/man/man1

# install
install -m 755 ctags $PKG/usr/bin
install -m 644 ctags.1 $PKG/usr/man/man1

# strip binaries
echo "Stripping binaries..."
find $PKG -type f | xargs file | grep "LSB executable" | cut -f 1 -d : | \
    xargs strip --strip-unneeded 2> /dev/null || \
    echo "No binaries to strip..."

# compress and link manpages, if any
echo "Compressing man pages..."
if [ -d $PKG/usr/man ]; then
    find $PKG/usr/man -type f -name "*.?" -exec gzip -9 {} \;
    for manpage in $(find $PKG/usr/man -type l) ; do
        ln -s $(readlink $manpage).gz $manpage.gz
        rm -f $manpage
    done
fi

# add a documentation directory
echo "Adding documentation package..."
mkdir -p $PKG/usr/doc/ctags-$PKGVER
install -p -m 644 \
    COPYING FAQ INSTALL NEWS README MAINTAINERS ctags.html EXTENDING.html\
    $PKG/usr/doc/ctags-$PKGVER

# build the package
mkdir -p $PKG/install
if [ -r $CWD/slack-desc ]; then
    install -m 644 $CWD/slack-desc $PKG/install
fi

if [ -r $CWD/doinst.sh ]; then
    install -m 755 $CWD/doinst.sh $PKG/install
fi
cd $PKG

PACKAGING="
    chown -R root.root .
    find . -perm 664 -exec chmod 644 {} \;
    find . -perm 777 -exec chmod 755 {} \;
    mkdir -p $OUT
    rm -f                   $OUT/ctags-$PKGVER-$ARCH-$BUILD.tgz
    /sbin/makepkg -l y -c n $OUT/ctags-$PKGVER-$ARCH-$BUILD.tgz
    rm -rf $PKG
    rm -rf $TMP/ctags-$DIRVER
"

if [ "$(which fakeroot 2> /dev/null)" ]; then
    echo "$PACKAGING" | fakeroot
else
    su -c "$PACKAGING"
fi

exit 0
